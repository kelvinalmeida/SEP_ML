services:
  gateway:
    build: ./gateway/
    container_name: gateway_container
    working_dir: /app
    ports:
      - "5000:5000"
    volumes:
      - ./gateway:/app # Monta o diretório local no container para hot reload
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=app.py # Substitua se o arquivo principal tiver outro nome
      - PYTHONUNBUFFERED=1
    command: "flask run --host=0.0.0.0"
    depends_on:
      - controller
      - user

  controller:
    build: ./control/
    container_name: controller_container
    working_dir: /app
    ports:
      - "5001:5001"
    volumes:
      - ./control:/app
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=app.py
      - PYTHONUNBUFFERED=1
    command: "flask run --host=0.0.0.0"

  user:
    build: ./user/
    container_name: user_container
    working_dir: /app
    ports:
      - "5002:5002"
    volumes:
      - ./user:/app
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=app.py
      - PYTHONUNBUFFERED=1
    command: "flask run --host=0.0.0.0"

  strategies:
    build: ./strategies/
    container_name: strategies_container
    working_dir: /app
    ports:
      - "5003:5003"
    volumes:
      - ./strategies:/app
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=app.py
      - PYTHONUNBUFFERED=1
    command: "flask run --host=0.0.0.0"
  domain:
    build: ./domain/
    container_name: domain_container
    working_dir: /app
    ports:
      - "5004:5004"
    volumes:
      - ./domain:/app
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=app.py
      - PYTHONUNBUFFERED=1
    command: "flask run --host=0.0.0.0"

# Volumes nomeados (se precisar persistência em banco ou arquivos locais)
volumes:
  session:
  user:
